library(DataMatching)
hello
install_github("emaasit/DataMatching")
library(devtools)
install_github("emaasit/DataMatching")
<<<<<<< HEAD
# This function receives information about the hovered
# point and returns an HTML string to display
all_values <- function(x) {
if(is.null(x)) return(NULL)
paste0(names(x), ": ", format(x), collapse = "<br />")
}
mtcars %>% ggvis(x = ~wt, y = ~mpg) %>%
layer_points(fill.hover := "red") %>%
add_tooltip(all_values, "hover")
library(magrittr)
# This function receives information about the hovered
# point and returns an HTML string to display
all_values <- function(x) {
if(is.null(x)) return(NULL)
paste0(names(x), ": ", format(x), collapse = "<br />")
}
mtcars %>% ggvis(x = ~wt, y = ~mpg) %>%
layer_points(fill.hover := "red") %>%
add_tooltip(all_values, "hover")
library(ggvis)
# This function receives information about the hovered
# point and returns an HTML string to display
all_values <- function(x) {
if(is.null(x)) return(NULL)
paste0(names(x), ": ", format(x), collapse = "<br />")
}
mtcars %>% ggvis(x = ~wt, y = ~mpg) %>%
layer_points(fill.hover := "red") %>%
add_tooltip(all_values, "hover")
sliderBox <- input_slider(.1, 2, value = 1, step = .1,
label = "Bandwidth adjustment")
selectBox <- input_select(c("Gaussian" = "gaussian",
"Epanechnikov" = "epanechnikov","Rectangular" = "rectangular",
"Triangular" = "triangular","Biweight" = "biweight",
"Cosine" = "cosine", "Optcosine" = "optcosine"),label = "Kernel")
mtcars %>%
ggvis(x = ~wt) %>%
layer_densities(adjust = sliderBox, kernel = selectBox)
system("R CMD build newpacakge")
system("R CMD build DataMatching")
getwd()
install.packages("testthat")
library(DataMatching)
library(DataMatching)
library(help = DataMatching)
?topten
=======
>>>>>>> dan-dev
